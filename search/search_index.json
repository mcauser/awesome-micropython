{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Awesome MicroPython","text":"<p>A curated list of awesome MicroPython libraries, frameworks, software and resources.</p> <p>MicroPython is a lean and efficient implementation of the Python 3 programming language that includes a small subset of the Python standard library and is optimised to run on microcontrollers and in constrained environments.</p>"},{"location":"#contents","title":"Contents","text":"<ul> <li>Libraries</li> <li>AI</li> <li>Audio</li> <li>Communications</li> <li>Cryptography</li> <li>Display</li> <li>IO</li> <li>Mathematics</li> <li>Motion</li> <li>Sensors</li> <li>Scheduling</li> <li>Storage</li> <li>Threading</li> <li>User Interface</li> <li>Utilities</li> <li>Community</li> <li>Tutorials</li> <li>Books</li> <li>Frameworks</li> <li>Resources</li> <li>Development</li> <li>Code Generation</li> <li>Debugging</li> <li>Firmware</li> <li>IDEs</li> <li>Logging</li> <li>Shells</li> <li>Miscellaneous</li> <li>Contributing</li> </ul>"},{"location":"#libraries","title":"Libraries","text":"<p>Other places you can look for MicroPython Libraries:</p> <ul> <li>PyPi - This filter shows just the MicroPython libraries on PyPi. Note: You cannot <code>pip install</code> MicroPython libraries. See the MicroPython docs for more information on managing packages with MicroPython.</li> <li>GitHub Search - Search GitHub for repositories containing MicroPython.</li> <li>GitHub Topic - MicroPython - Browse GitHub Topics for projects tagged with MicroPython.</li> <li>Libraries.io - Libraries.io query for MicroPython.</li> <li>GitLab Explore - Explore repositories on GitLab.</li> <li>Codeberg Explore - Explore repositories on Codeberg.</li> </ul>"},{"location":"#ai","title":"AI","text":"<ul> <li>MicroMLP - A micro neural network multilayer perceptron for MicroPython (used on ESP32 and Pycom modules).</li> <li>MicroPython-NeuralNetwork - Neural Network for MicroPython.</li> <li>upython-chat-gpt - ChatGPT for MicroPython.</li> <li>emlearn-micropython - Efficient Machine Learning engine for MicroPython.</li> <li>mp_esp_dl_models - MicroPython binding for the ESP DL vision models like face detection.</li> </ul>"},{"location":"#audio","title":"Audio","text":"<ul> <li>micropython-jq6500 - Driver for JQ6500 UART MP3 modules.</li> <li>KT403A-MP3 - Driver for KT403A, used by DFPlayer Mini and Grove MP3 v2.0.</li> <li>micropython-buzzer - Play Nokia compose and mid files on buzzers.</li> <li>micropython-dfplayer - Library to control the DFPlayer mini MP3 player module.</li> <li>micropython-dfplayer - Driver for DFPlayer Mini using UART.</li> <li>micropython-longwave - WAV player for MicroPython board.</li> <li>micropython-vs1053 - Asynchronous driver for VS1053b MP3 player.</li> <li>micropython-midi - A MIDI implementation example for MicroPython.</li> <li>upy-rtttl - Python Parser for Ring Tone Text Transfer Language (RTTTL).</li> <li>micropython-i2s-examples - Examples for I2S support on microcontrollers that run MicroPython.</li> <li>micropython-osc - A minimal OSC client and server library for MicroPython.</li> <li>micropython-sgtl5000 - Library for SGTL5000 Low Power Stereo Codec w/ Headphone Amp.</li> <li>umidiparser - MIDI file parser for MicroPython, CircuitPython and Python.</li> <li>micropython-tas2505 - MicroPython driver for the Texas Instruments TAS2505 Digital Input Class-D Speaker Amplifier.</li> <li>yx5300 - MP3 player that can be controlled via a serial interface.</li> <li>micropython_nonblocking_buzzer - A nonblocking implementation of a buzzer class that allows you to play basic melodies or sound patterns without blocking the main loop while the sound is being played.</li> </ul>"},{"location":"#communications","title":"Communications","text":""},{"location":"#apis","title":"APIs","text":"<ul> <li>micropython-utelegram - Telegram API wrapper for MicroPython.</li> <li>uEagle - MicroPython Rainforest EAGLE client.</li> <li>micropython-youtube-api - YouTube API in MicroPython.</li> <li>micropython_esp8266_tweetbot - Tweet bot for MicroPython v1.8.4 (ESP8266).</li> <li>telegram-upy - Telegram API wrapper for MicroPython.</li> <li>micropython-thingspeak - Library for sending data to thingspeak.com from IoT devices running MicroPython (such as ESP8266).</li> <li>micropython_pushbullet - Simple example of how to use PushBullet with MicroPython on ESP8266.</li> <li>esp32-youtube-display - Display YouTube metrics using Google API and MicroPython.</li> <li>micropython-spotify-web-api - A library for using Spotify's web API from a IoT device with MicroPython.</li> <li>micropython_demo_bot - Little example of how to create a bot for Telegram.</li> <li>micropython-basicdweet - A python module for very basic APIs of the free dweet service.</li> <li>micropython-dweeter - A python module for messaging through the free dweet service.</li> <li>micropython-cryptodweet - A python module for very basic APIs of the free dweet service with encryption.</li> <li>micropython-linenotify - MicroPython library for sending notifications to Line Notify with ESP8266 and ESP32.</li> <li>micropython-telegram-bot - MicroPython telegram bot library: simple way to put your IoT projects on the cloud.</li> <li>MicroPython-GoogleSheet - Fetch, update or append data in Google Sheets using Google Apps Script API.</li> </ul>"},{"location":"#authentication","title":"Authentication","text":"<ul> <li>micropython-firebase-auth - Firebase Auth implementation for MicroPython.</li> </ul>"},{"location":"#bluetooth","title":"Bluetooth","text":"<ul> <li>PyBoard-HC05-Android - Pyboard HC05 Bluetooth adapter example application.</li> <li>uble - Lightweight Bluetooth Low Energy driver written in pure Python for MicroPython.</li> <li>MicroPythonBLEHID - Human Interface Device (HID) over Bluetooth Low Energy (BLE) GATT library for MicroPython.</li> <li>upyble - Command line tool for Bluetooth Low Energy MicroPython devices.</li> <li>micropython-xiaomi-ble-adv-parse - Passively retrieve sensor data from some Xiaomi Bluetooth Low Energy (BLE) sensors.</li> <li>mijia-temphum-upy - MicroPython library to read certain Xiaomi Mijia BLE temperature &amp; humidity sensors.</li> <li>micropython-aioble-itag - Examples using aioble to interact with iTag BLE keychain tags.</li> <li>micropython_aioble_examples - A few aioble (asyncio BLE) examples of MicroPython using ESP32.</li> </ul>"},{"location":"#can","title":"CAN","text":"<ul> <li>micropython-spacecan - Spacecan is a MicroPython implementation of the SpaceCAN protocol for embedded systems.</li> <li>Robomaster-Micropython - Robomaster S1 - MicroPython CAN BUS controller.</li> <li>micropython-mcp2515 - MicroPython MCP2515 driver, porting from Arduino MCP2515 CAN interface library.</li> <li>microPython_MCP2515 - A MicroPython library for the MCP2515 CAN bus controller.</li> </ul>"},{"location":"#compression","title":"Compression","text":"<ul> <li>ufastlz - MicroPython wrapper for FastLZ, a lightning-fast lossless compression library.</li> <li>tamp - A low-memory, MicroPython-optimized, DEFLATE-inspired lossless compression library.</li> <li>micropython-zipfile - Read/write ZIP archive files. Ported from CPython, supports DEFLATE compression.</li> </ul>"},{"location":"#cryptography","title":"Cryptography","text":"<ul> <li>ucryptography - Lightweight porting of pyca/cryptography to MicroPython based on ARM Mbed TLS.</li> <li>mpyaes - MicroPython module for AES encryption.</li> <li>micropython-aes - AES algorithm with pure python implementation.</li> <li>ucrypto - MicroPython package for doing fast RSA and elliptic curve cryptography, specifically digital signatures. ECDSA API design inspired from fastecdsa and implementation based on tomsfastmath.</li> <li>ucryptoauthlib - Lightweight driver for Microchip Crypto Authentication secure elements written in pure Python for MicroPython.</li> <li>embit - A minimal Bitcoin library for MicroPython and Python 3 with a focus on embedded systems.</li> <li>microotp - An ESP8266 MicroPython OTP Generator.</li> <li>micropython-rsa-signing - RSA signing on MicroPython.</li> <li>micropython-cryptomsg - A MicroPython module to encrypt and decrypt messages with AES CBC mode.</li> <li>mprsa - A MicroPython module for creating, importing, and exporting RSA keys in DER and PEM formats with PKCS#1, PKCS#8, and X.509/SPKI structures, and signing/verifying and encryption/decryption using blinding and SHA-1 and SHA-256 hashing algorithms.</li> <li>mpy-mbedtls - MicroPython bindings for some MbedTLS EC and x509 cert/csr functions.</li> <li>micropython-cryptocfb - A Python module to encrypt and decrypt data with AES-128 CFB mode.</li> <li>tscp - An endpoint-to-endpoint encryption based on Diffie-Hellman-Merkle with TLS1.3 styled handshake using MicroPython.</li> <li>usigv4 - A minimal aws signature version 4 (SigV4) implementation for micropython/embedded use.</li> </ul>"},{"location":"#dns","title":"DNS","text":"<ul> <li>aiodns - A small, versatile DNS client that provides an async version of <code>getaddrinfo</code> and works with any connectivity.</li> <li>ICantBelieveItsNotDNS - \"I Can't Believe It's Not DNS!\" (ICBIND) is an authoritative DNS server for the ESP8266 written in MicroPython.</li> <li>MicroDNSSrv - A micro DNS server for MicroPython to simply respond to A queries on multi-domains with or without wildcards (used on Pycom modules &amp; ESP32).</li> <li>tinydns - Very simple DNS async server for MicroPython.</li> <li>micropython-captiveportal -  Minimal async captive portal for MicroPython (compatible with uasyncio v3/MicroPython 1.13+ as well as earlier versions).</li> <li>Micropython-DNSServer-Captive-Portal - MicroPython WiFi AP Captive Portal with DNS and Web Server.</li> </ul>"},{"location":"#esp-now","title":"ESP-NOW","text":"<ul> <li>mesh-espnow-micropython - Dynamic Secure Mesh for Collaborative Nodes of IoT devices.</li> <li>mp_espnow_wrapper - Send and receive data between ESPs over ESP-NOW without worries.</li> </ul>"},{"location":"#ethernet","title":"Ethernet","text":"<ul> <li>Official WIZnet5k - Driver for the WIZnet5x00 series of Ethernet controllers.</li> <li>micropy-ENC28J60 - ENC28J60 Ethernet chip driver for MicroPython (RP2).</li> <li>RP2040 Ethernet example - Ethernet driver, example Python code and YouTube.</li> <li>micropython-ch9121 - MicroPython library for controlling CH9121 Ethernet modules.</li> </ul>"},{"location":"#ftp","title":"FTP","text":"<ul> <li>micropython-ftplib - An FTP client library for MicroPython.</li> <li>FTP-Server-for-ESP8266-ESP32-and-PYBD - Small FTP server for ESP8266/ESP32/Pyboard on the MicroPython platform.</li> <li>MicroFTPServer - Minimal FTP Server that can run on an ESP8266 with MicroPython.</li> <li>micropython-uaioftp - Lightweight FTP library for MicroPython.</li> <li>FtpTiny-Micropython - Really small FTP server that runs in a thread.</li> </ul>"},{"location":"#gps","title":"GPS","text":"<ul> <li>micropyGPS - Full featured GPS NMEA sentence parser.</li> <li>micropython-gnssl76l - MicroPython I2C driver for Quectel GNSS L76-L (GPS).</li> <li>mpy-agps - MicroPython implementation of assisted location services (AGPS).</li> <li>Asynchronous GPS driver - Receive and parse GPS data as a uasyncio task.</li> </ul>"},{"location":"#gsm","title":"GSM","text":"<ul> <li>micropython-upyphone - A GSM phone using Pyboard and SIM800l.</li> <li>micropython-sim800 - MicroPython driver for SIM800.</li> <li>sim800 - Library for interfacing with SIM800 module in MicroPython.</li> <li>MicroPython-AM7020 - MicroPython driver for AM7020 Narrowband Internet of Things (NBIoT) module.</li> <li>SIM800L-micropython - MicroPython wrapper for common SIM800L AT commands.</li> <li>sim7600 - MicroPython library for SIM7600 module.</li> <li>sim900 - MicroPython library for SIM900 GSM/GPRS module.</li> </ul>"},{"location":"#http","title":"HTTP","text":"<ul> <li>mrequests - A HTTP client module (not only) for MicroPython with an API similar to requests.</li> </ul>"},{"location":"#iot","title":"IoT","text":"<ul> <li>aiomqttc - Asynchronous MQTT Client for Micropython AND CPython. </li> <li>microhomie - MicroPython implementation of the Homie MQTT convention for IoT.</li> <li>uPyEcho - Emulated Belkin WeMo device that works with Amazon Echo (Alexa) using MicroPython on an ESP32.</li> <li>SonosRemote - A remote for Sonos installations running on an ESP8266 and using Sonos HTTP API.</li> <li>micropython-home-assistant - MicroPython-based scripts to extend your Home Assistant-driven home automation projects.</li> <li>micropython-iot - An approach to designing IoT applications using ESP8266, ESP32 or Pyboard D endpoints.</li> <li>iot-core-micropython - Use MicroPython to connect to Google Cloud IoT Core.</li> <li>SmartUPy - Controlling \"Tuya-type\" smart power outlets using MicroPython.</li> <li>aws-iot-GET-POST-loop - MicroPython code which uses the AWS IoT REST API to GET/POST device state info.</li> <li>sensor-mqtt-homeassistant - An ESP8266/ESP32 MicroPython-based sensor platform for GPIO, DHT, analog, LED and more. Includes remote updates for .py code from web server and MQTT/Home Assistant integration.</li> <li>micropython-ha-mqtt-device - MicroPython module which allows creating Entites for HomeAssistant using MQTT Discovery.</li> <li>ESP8266-Home-Assistant-Smart-Socket - This MicroPython project is to hack a Hyleton313 cheap WiFi smart socket.</li> <li>ESP8266-Home-Assistant-RGB-Bulb - This MicroPython project is to hack a TYWE3S board in a cheap WiFi RGB Bulb.</li> <li>uPyIoT - Connect an M5Stack ATOM running MicroPython to the Google Cloud Platform (GCP) to collect air-quality variables obtained from reading sensors.</li> <li>micropython-switchbot-thermometer-hygrometer - Read SwitchBot Thermometer/Hygrometer via Bluetooth.</li> </ul>"},{"location":"#ir","title":"IR","text":"<ul> <li>micropython-necir - NEC infrared capture for TL1838 IR receiver LEDs.</li> <li>Micropython-IR - Pyboard infrared remote sniff and replay.</li> <li>micropython_ir - Nonblocking device drivers to receive from IR remotes and for IR \"blaster\" apps.</li> <li>micropython-amg88xx - Driver for Grid-EYE thermal infrared array sensor (Adafruit 3538).</li> <li>micropython-ys-irtm - MicroPython examples for YS-IRTM 5V NEC Infrared UART transceivers.</li> <li>esp8266_ir - Control IR signal by WebSocket.</li> <li>micropython_espX_IR_Transceiver - MicroPython ESP32 IR Transceiver.</li> <li>pico-ir - IR library for Raspberry Pi Pico.</li> <li>esp32-ir-remote - A MicroPython project for running ESP32 IR remotes.</li> </ul>"},{"location":"#lora","title":"LoRa","text":"<ul> <li>loraE22 - A MicroPython class for the Ebyte E22 Series LoRa modules.</li> <li>micropython-lora - MicroPython library for controlling a Semtech SX127x LoRa module over SPI.</li> <li>micropython-aiolora - MicroPython library for controlling a Semtech SX127x LoRa module with asyncio API.</li> <li>micropython-rylr - MicroPython library for controlling Reyax LoRa modules (RYLR896, RYLR406).</li> <li>silvergeko_rfm9x - Porting to MicroPython of adafruit_rfm9x.py library.</li> </ul>"},{"location":"#lorawan","title":"LoRaWAN","text":"<ul> <li>uPyLoRaWAN - ESP32 using MicroPython meets LoRa and LoRaWAN.</li> <li>SX127x_driver_for_MicroPython_on_ESP8266 - SX127x (LoRa transceiver) driver for (Micro)Python on ESP8266/ESP32/Raspberry Pi.</li> <li>LightLora_MicroPython - Lightweight Interrupt-driven Semtech SX127x Library for MicroPython.</li> <li>u-lora - Raspi-lora for MicroPython.</li> <li>sx127x_esp - Connect Ra-01 module base on LoRaTM sx127x chip to ESP8266/ESP32 under MicroPython.</li> <li>nanoserver - MicroPython embedded LoRaWAN server.</li> <li>micropySX126X - Semtech SX126X LoRa driver for MicroPython and CircuitPython.</li> </ul>"},{"location":"#mdns","title":"MDNS","text":"<ul> <li>micropython-mdns - A pure Python implementation of MDNS with support for Service Discovery.</li> </ul>"},{"location":"#modbus","title":"Modbus","text":"<ul> <li>micropython-modbus - MicroPython port of modbus-tk.</li> <li>micropython-modbus - Modbus Master library for MicroPython ESP32 devices. Based on pycom-modbus from Pycom.</li> <li>mp_modbus - Modbus library for MicroPython.</li> <li>micropython-modbus - ModBus TCP and RTU library supporting client and host mode. Based on pycom-modbus from Pycom.</li> </ul>"},{"location":"#mqtt","title":"MQTT","text":"<ul> <li>micropython-mqtt - A 'resilient' asynchronous MQTT client: recovers from WiFi and broker outages.</li> <li>MQBoard - A micro-framework for using MQTT with asyncio on MicroPython boards, primarily on the ESP32.</li> <li>pysmartnode -  MicroPython Smart Home framework.</li> <li>umqtt_aws_iot - Publish UMQTT messages with MicroPython to AWS IoT.</li> <li>sonoff-mqtt by davea - MicroPython scripts to control Sonoff/ESP8266 using MQTT.</li> <li>micropython-sonoff-switch - Implements an MQTT-controllable switch for the iTead Sonoff Switch using MicroPython.</li> <li>micropython-thingspeak-mqtt-esp8266 - Publish and Subscribe to ThingSpeak using MQTT with MicroPython running on ESP8266/ESP32 platforms.</li> <li>uMQTT - MQTT publish for MicroPython on the WiPy board.</li> <li>micropython-mqtt - Async MQTT library with auto reconnect for MicroPython devices such as the ESP32 or Pycom devices.</li> <li>micropython-adafruit-mqtt-esp8266 - Using MQTT to Publish/Subscribe to Adafruit IO. MicroPython/CircuitPython implementation on ESP8266/ESP32.</li> <li>mqtt_upython - MQTT Client using MicroPython on ESP8266.</li> <li>tinymqtt - Async MQTT client for MicroPython.</li> <li>micropython-mqtt-thingspeak - Publish and Subscribe to ThingSpeak using MQTT with MicroPython.</li> <li>micropython-sparkplugb - MicroPython compatible implementation of the Eclipse Sparkplug B Specification.</li> </ul>"},{"location":"#nbd","title":"NBD","text":"<ul> <li>unbd - Micro implementation of network block device (NBD) for MicroPython.</li> </ul>"},{"location":"#nfc","title":"NFC","text":"<ul> <li>micropython-nfc - Using NFC with MicroPython.</li> <li>micropython_pn532 - Driver for PN532 NFC/RFID breakout boards based on Adafruit CircuitPython (UART).</li> <li>NFC_PN532_SPI - Partial port of Adafruit CircuitPython to MicroPython of PN532 NFC/RFID control library (SPI).</li> </ul>"},{"location":"#ntp","title":"NTP","text":"<ul> <li>esp8266_ntp_webserver - MicroPython + ESP8266 + NTP + web server.</li> <li>micropython-ntpd - An implementation of an NTP daemon in MicroPython.</li> <li>micropython_ntpserver - An NTP server written for MicroPython.</li> <li>micropython-ntpclient - NTP client for MicroPython using uasyncio.</li> <li>micropython-ntp - Robust NTP library for MicroPython.</li> </ul>"},{"location":"#object-storage","title":"Object Storage","text":"<ul> <li>uminio - MicroPython library to upload files into a MinIO object storage server.</li> </ul>"},{"location":"#onewire","title":"OneWire","text":"<ul> <li>Official OneWire - For devices using the OneWire bus, eg Dallas DS18x20.</li> <li>Onewire_DS18X20 - Classes for driving the DS18x20 sensor with the OneWire protocol for Pycom MicroPython.</li> <li>micropython_arduino_control - MicroPython library to control an Arduino remotely, with corresponding Arduino code.</li> </ul>"},{"location":"#onkyo-eiscp","title":"Onkyo EISCP","text":"<ul> <li>eiscp-micropython - MicroPython port for the Onkyo-EISCP protocol used, among others, by Pioneer.</li> </ul>"},{"location":"#ota","title":"OTA","text":"<ul> <li>micropython-ota-updater - OTA Updater for MicroPython.</li> <li>Micropython-ESP32-OTA - MicroPython updater based on rdehuyss/micropython-ota-updater.</li> <li>senko - Simplest OTA update solution for your MicroPython projects.</li> </ul>"},{"location":"#proxy","title":"Proxy","text":"<ul> <li>uProxy - An asyncio-based, memory-efficient HTTP/HTTPS/SOCKS4/SOCKS5 forward proxy server for MicroPython, compatible with CPython.</li> </ul>"},{"location":"#radio","title":"Radio","text":"<ul> <li>micropython-radio - Protocols for nRF24L01 2.4GHz radio modules.</li> <li>micropython-rfsocket - MicroPython implementation of popular 433MHz-based RFSockets.</li> <li>Official nRF24L01 - Official driver for nRF24L01 2.4GHz radio modules.</li> <li>micropython_remote - Capture and replay 433MHz remote control codes. Control remote switched power adaptors.</li> <li>micropython-ys-rf34t - MicroPython examples using YS-RF34T 433MHz ASK/OOK UART transceivers.</li> <li>FM_Talkie - FM Walkie Talkie using RDA5820N.</li> <li>micropython-TEA5767 - MicroPython ESP8266/ESP32 driver for TEA5767 FM radio module.</li> <li>micropython-ppm-decoder - Utility for decoding an R/C receiver PPM frame signal.</li> <li>ESP32-433Mhz-Receiver-and-Tools - ESP32 433MHz receiver written in MicroPython and tools for Windows.</li> <li>ESP32-433Mhz-Transmitter - A pure MicroPython RF transmitter. You can create and add your own encoder.</li> <li>pico_jjy_tx - JJY transmitter for Raspberry Pi Pico W.</li> <li>pico_dcf77_tx - DCF77 transmitter for Raspberry Pi Pico W.</li> <li>micropython_dcf77 - DCF77 receiver and decoder.</li> <li>EByte_LoRa_E220_micropython_library - MicroPython LoRa EBYTE E220 devices.</li> <li>EByte_LoRa_E22_micropython_library - MicroPython LoRa EBYTE E22 devices.</li> <li>EByte_LoRa_E32_micropython_library - MicroPython LoRa EBYTE E32 devices.</li> </ul>"},{"location":"#rc-receiver","title":"RC receiver","text":"<ul> <li>micropython-ppm_reader - Library to decode PPM signals coming from a RC receiver.</li> </ul>"},{"location":"#repl","title":"REPL","text":"<ul> <li>webrepl - MicroPython WebREPL.</li> <li>zepl - MicroPython WebREPL Console Application using ZeroMQ.</li> <li>jupyter_micropython_remote - Jupyter kernel to directly execute code on a MicroPython board over the serial/web REPL.</li> <li>FBConsole - Framebuffer console class for MicroPython.</li> </ul>"},{"location":"#rfid","title":"RFID","text":"<ul> <li>micropython-mfrc522 - Driver for NXP MFRC522 RFID reader/writer.</li> <li>micropython-wiegand - Wiegand protocol reader.</li> <li>urdm6300 - A MicroPython driver for the popular RDM6300 RFID card reader.</li> </ul>"},{"location":"#rpc","title":"RPC","text":"<ul> <li>ujrpc - JSON RPC for MicroPython.</li> </ul>"},{"location":"#rtc","title":"RTC","text":"<ul> <li>micropython-tinyrtc-i2c - Driver for DS1307 RTC and AT24C32N EEPROM.</li> <li>Micropython_TinyRTC - Driver for DS1307 RTC.</li> <li>micropython-mcp7940 - Driver for the Microchip MCP7940 RTC.</li> <li>micropython-ds1302-rtc - DS1302 RTC Clock driver for MicroPython.</li> <li>DS3231micro - MicroPython library for DS3231.</li> <li>micropython-ds1307 - MicroPython driver for DS1307 RTC.</li> <li>esp-ds3231-micropython - A DS3231 library for ESP8266/ESP32 with MicroPython.</li> <li>PCF8563_PythonLibrary - MicroPython library for NXP PCF8563 Real-time clock/calendar.</li> <li>DS3231 - MicroPython module for the DS3231 clock from Maxim Integrated.</li> <li>DS1307 - MicroPython driver for the DS1307 real time clock.</li> <li>micropython-DS3231-AT24C32 - MicroPython driver for DS3231 RTC.</li> <li>micropython_rx-8035 - A MicroPython Driver for Seiko Epson's RTC, RX-8035SA/LC.</li> </ul>"},{"location":"#serial","title":"Serial","text":"<ul> <li>mpy-miniterm - Tool for seamless serial debug and file synchronisation with MicroPython devices via the serial REPL.</li> <li>MicroPython-MorseCode - International Morse Code using a microcontroller with MicroPython.</li> <li>I2C Slave - Uses the Pyboard's I2C slave mode to implement a full duplex asynchronous link. Principal use case is for ESP8266 which has only one UART.</li> <li>microSDI12 - A mini SDI-12 implementation for getting sensor info over RS-485.</li> </ul>"},{"location":"#serialization","title":"Serialization","text":"<ul> <li>micropython-msgpack - MessagePack serialisation library optimised for MicroPython.</li> <li>micropython-uprotobuf - A lightweight implementation of Google's Protocol Buffers (protobuf) for MicroPython.</li> <li>minipb - Mini Protobuf {de}serializer in pure Python.</li> <li>ucbor - Lightweight implementation of cbor for MicroPython.</li> <li>upy-msgpack - A lightweight MessagePack (de)serialization library (not only) for MicroPython.</li> </ul>"},{"location":"#smtp","title":"SMTP","text":"<ul> <li>uMail - A lightweight, scalable SMTP client for sending email in MicroPython.</li> </ul>"},{"location":"#sockets","title":"Sockets","text":"<ul> <li>XAsyncSockets - XAsyncSockets is an efficient Python/MicroPython library of managed asynchronous sockets.</li> </ul>"},{"location":"#socks","title":"SOCKS","text":"<ul> <li>micropython-socks - MicroPython library implementing SOCKS server.</li> </ul>"},{"location":"#tcp","title":"TCP","text":"<ul> <li>us2n - MicroPython bridge between UART and TCP for the ESP32.</li> </ul>"},{"location":"#telnet","title":"Telnet","text":"<ul> <li>MicroTelnetServer - Simple telnet server for MicroPython and the ESP8266 allowing telnet clients access to the REPL.</li> </ul>"},{"location":"#text-to-speech","title":"Text-to-Speech","text":"<ul> <li>micropython-SYN6988 - MicroPython library for the VoiceTX SYN6988 text to speech module.</li> </ul>"},{"location":"#time","title":"Time","text":"<ul> <li>ustrftime - A MicroPython implementation of time.strftime.</li> </ul>"},{"location":"#voip","title":"VoIP","text":"<ul> <li>uPyVoip - VoIP for MicroPython ESP32 with Interactive Voice Response.</li> </ul>"},{"location":"#web","title":"Web","text":"<ul> <li>MicroWebSrv - A micro HTTP web server that supports WebSockets, HTML/Python language templating and routing handlers, for MicroPython (used on Pycom modules &amp; ESP32).</li> <li>MicroWebSrv2 - The last micro web server for IoTs (MicroPython) or large servers (CPython), that supports WebSocket, routes, template engine and with really optimized architecture (mem allocations, async I/Os).</li> <li>tinyweb - Simple and lightweight HTTP async server for MicroPython.</li> <li>upy-websocket-server - MicroPython (ESP8266) WebSocket server implementation.</li> <li>micropython-captive-portal - A captive portal demo for MicroPython.</li> <li>uPyPortal - A captive portal for MicroPython using ESP32 (Wemos).</li> <li>ESP8266WebServer - ESP8266 web server for MicroPython.</li> <li>microCoAPy - A mini client/server implementation of CoAP (Constrained Application Protocol) into MicroPython.</li> <li>micropyserver - MicroPyServer is a simple HTTP server for MicroPython projects.</li> <li>MicroRESTCli - A micro JSON REST web client based on MicroWebCli for MicroPython (used on Pycom modules &amp; ESP32).</li> <li>micropython-noggin - A very simple web server for MicroPython.</li> <li>uwebsockets - MicroPython WebSocket implementation for ESP8266.</li> <li>microdot - The impossibly small web framework for MicroPython.</li> <li>micropython-nanoweb - Full async MicroPython web server with small memory footprint.</li> <li>MicroWebCli - A micro HTTP web client for MicroPython (used on Pycom modules &amp; ESP32).</li> <li>micropython-configserver - Captive portal for MicroPython including a dumb DNS server and a web server to configure WiFi networks.</li> <li>micropython-aioweb - A minimalist asyncio web framework for MicroPython.</li> <li>thimble - A tiny web framework for MicroPython.</li> <li>CaptiveWebServer - Simple MicroPython web server for serving a website from a captive portal.</li> <li>micropython-urouter - A lightweight HTTP request routing processing support library based on MicroPython. The previous name was micro-route.</li> <li>wlan-relays - Very simple HTTP server written in MicroPython for controlling the pins of an ESP32 board.</li> </ul>"},{"location":"#wifi","title":"WiFi","text":"<ul> <li>HueBridge - Philips Hue Bridge.</li> <li>micropython-wifimanager - A simple network configuration utility for MicroPython on the ESP8266 board.</li> <li>WiFiManager - WiFi manager for ESP8266 - ESP12 - ESP32 - MicroPython.</li> <li>Micropython-ESP-WiFi-Manager - WiFi Manager to configure and connect to networks.</li> <li>mpy-wpa_supplicant - MicroPython module to connect to the nearest known Wifi AP.</li> <li>micropython-wifi_manager - WiFi Manager for ESP8266 and ESP32 using MicroPython.</li> </ul>"},{"location":"#zigbee","title":"Zigbee","text":"<ul> <li>ZbPy - MicroPython IEEE802.15.4 / Zigbee parser.</li> </ul>"},{"location":"#cryptography_1","title":"Cryptography","text":""},{"location":"#historical","title":"Historical","text":"<ul> <li>enigmapython - A simple yet faithful library to emulate different Enigma machines models using MicroPython.</li> </ul>"},{"location":"#display","title":"Display","text":""},{"location":"#e-paper","title":"E-Paper","text":"<ul> <li>micropython-ili9341 - SSD1606 active matrix ePaper display 128x180.</li> <li>micropython-waveshare-epaper - Drivers for various Waveshare ePaper modules.</li> <li>micropython-waveshare-epd - Waveshare ePaper Display driver for devices running Pycom-flavored MicroPython.</li> <li>ssd1675a - Driver for SSD1675-based e-paper displays.</li> <li>Inkplate-micropython - MicroPython driver for Inkplate boards.</li> <li>micropython-inkplate6 - MicroPython driver for the Inkplate 6.</li> <li>eInk-micropython - eInk library for Waveshare 4.3inch device on MicroPython.</li> <li>eink - An eInk, ePaper display driver for MicroPython and ESP32.</li> <li>micropython_DEPG0213BN - Pure MicroPython driver for the DEPG0213BN eInk display found on the TTGO T5 V2.3 ESP32 boards.</li> <li>uPyEINK - Control a Waveshare 7.5\" E-INK display using an ESP32 running MicroPython.</li> <li>MicroPython-2.9-inch-ePaper-Library - MicroPython Display Driver for WaveShare 2.9inch e-Paper Display (B).</li> <li>uc8151_micropython - UC8151 / IL0373 MicroPython e-paper display driver with support for greyscales and fast updates.</li> </ul>"},{"location":"#fonts","title":"Fonts","text":"<ul> <li>micropython-font-to-py - A Python 3 utility to convert fonts to Python source capable of being frozen as bytecode.</li> <li>writer - A simple way to render above Python fonts to displays whose driver is subclassed from <code>framebuf</code>.</li> <li>ssd1306big - A font for MicroPython on 128x64 pixel SSD1306 OLED display.</li> <li>framebuf2 - MicroPython FrameBuffer extension: larger and rotated font, triangles and circles.</li> <li>micropython_GT30L24T3Y_big5_font - MicroPython driver for reading BIG-5 Chinese characters from GT30L24T3Y / ER3303-1 SPI module.</li> <li>ttgo-hershey-fonts - MicroPython Hershey font demo for the TTGO-LCD board.</li> <li>packed-font -  Memory efficient MicroPython fonts for the Pico Pi and SSD1306 OLED Display.</li> <li>microfont - Text drawing library for MicroPython framebuffer.</li> </ul>"},{"location":"#graphics","title":"Graphics","text":"<ul> <li>micropython-stage - A MicroPython port of the Stage game library.</li> <li>micropython-png - Derivative of PyPNG for use with MicroPython.</li> <li>mpy-img-decoder - PNG and JPEG decoder / parser / renderer in pure MicroPython.</li> <li>micropython-oled-progressbars - A collection of progress bars for use with ESP8266 and ESP32 on OLED displays.</li> <li>microplot - Simple MicroPython plotting package.</li> <li>micropython-microbmp - A small Python module for BMP image processing.</li> <li>MicroPython_UPLOT - MicroPython Small Graphics Framework.</li> <li>Tempe - Efficient MicroPython graphics library built on top of <code>framebuf</code>.</li> <li>mp_jpeg - A very fast MicroPython JPEG encoder and decoder for the ESP32.</li> </ul>"},{"location":"#gui","title":"GUI","text":"<ul> <li>lvgl - An object-oriented, component-based high-level GUI library with MicroPython binding.</li> <li>micropython-lcd160cr-gui - Simple touch-driven event based GUI for the Pyboard and LCD160CR colour display.</li> <li>micropython_ra8875 - MicroPython device driver and nano-GUI for RA8875 based displays.</li> <li>micropython-nano-gui - A tiny display-only GUI with a limited set of GUI objects (widgets) for displays whose display driver is subclassed from the <code>framebuf</code> class. With drivers for TFT, ePaper and OLED displays.</li> <li>micro-gui - Derived from nano-gui and supporting the same displays and hosts, this provides for user input via push buttons or a navigation joystick and an optional rotary encoder.</li> <li>micropython-touch - Derived from nano-gui and supporting the same displays and hosts, this offers touch input. Supports various touch controllers.</li> <li>TFT-GUI - A fast touch GUI for large displays based on SSD1963 controller with XPT2046 touch controller.</li> <li>micropython-nextion - Control Nextion displays using MicroPython.</li> <li>mp_lvgl_widgets - Widgets for the MicroPython Port of LVGL.</li> <li>micropython-core2 - Extends LV-MicroPython for the M5Stack CORE2 with MPU6886, ILI9342C, BM8563 and AXP192 drivers.</li> </ul>"},{"location":"#lcd-character","title":"LCD Character","text":"<ul> <li>Grove_RGB_LCD - Driver for SeeedStudio's Grove RGB LCD.</li> <li>lcdi2c - Driver for HD44780-compatible dot matrix LCDs.</li> <li>micropython-charlcd - Driver for HD44780-compatible LCDs.</li> <li>micropython-i2c-lcd - Driver for I2C 2x16 LCD Screens.</li> <li>pyboard-LCD-character-display - Pyboar driver for HDD44780-compatible 1602 LCDs.</li> <li>python_lcd - Driver for HD44780-compatible dot matrix LCDs.</li> <li>micropython-lcd - Class for controlling the HD44780 from a MicroPython Pyboard.</li> <li>HD44780-lcd-upy - MicroPython module for controlling a generic HD44780 LCD.</li> <li>LCM1602-14_LCD_Library - driver for AIP31068L 3.3 V I2C and SPI 1602 Serial Character LCDs.</li> <li>micropython-i2c-lcd - MicroPython package to control HD44780 LCD displays 1602 and 2004 via I2C.</li> <li>micropython_i2c_lcd - MicroPython library for interacting with HD44780-based LCD displays through a PCF8574 I/O expander. It offers a high-level API for LCD control, including text display, cursor manipulation, and backlight settings, while also providing lower-level access to the GPIO operations on the PCF8574.</li> </ul>"},{"location":"#lcd-graphic","title":"LCD Graphic","text":"<ul> <li>micropython-lcd-AQM1248A - ESP8266 driver for AQM1248A graphic LCD.</li> <li>micropython-pcd8544 - Driver for Nokia 5110 PCD8544 84x48 LCD modules.</li> <li>micropython-st7565 - Driver for ST7565 128x64 LCDs.</li> <li>micropython-st7920 - Library for simple graphic primitives on ST7920 128x64 monochrome LCD panel using ESP8266 and SPI.</li> <li>MicroPython_PCD8544 - ESP8266 driver for Nokia 5110 PCD8544.</li> <li>Official LCD160CR - Driver for official MicroPython LCD160CR display with resistive touch sensor.</li> <li>micropython-hx1230 - MicroPython library for HX1230 96x68 LCD modules.</li> <li>micropython-SHARP_Memory_Display - MicroPython driver for SHARP memory display.</li> </ul>"},{"location":"#lcd-tft","title":"LCD TFT","text":"<ul> <li>micropython-ili9341 - Collection of drivers for TFT displays, ILI9341, SH1106, SSD1606, ST7735.</li> <li>micropython-ili934x - SPI driver for ILI934X series based TFT / LCD displays.</li> <li>MicroPython-ST7735 - ESP32 version of GuyCarvers's ST7735 TFT LCD driver.</li> <li>micropython-st7735 - Driver for ST7735 TFT LCDs.</li> <li>MicroPython_ST7735 - Driver for ST7735 128x128 TFT.</li> <li>SSD1963-TFT-Library-for-PyBoard-and-RP2040 - SSD1963 TFT Library for Pyboard and Raspberry Pi Pico.</li> <li>ST7735 - Driver for ST7735 TFT LCDs.</li> <li>micropython-ili9341 - MicroPython ILI9341 display &amp; XPT2046 touch screen driver.</li> <li>st7789_mpy - Fast pure-C driver for MicroPython that can handle display modules on ST7789 chip.</li> <li>st7789py_mpy - Slow MicroPython driver for 240x240 ST7789 display without CS pin from AliExpress, written in MicroPython.</li> <li>micropython-ili9341 - MicroPython Driver for ILI9341 display.</li> <li>micropython-ili9341 - ILI9341 TFT driver for MicroPython on ESP32.</li> <li>st7789_mpy - Fast MicroPython driver for ST7789 display module written in C.</li> <li>st7789py_mpy - Driver for 320x240, 240x240 and 135x240 ST7789 displays written in MicroPython.</li> <li>ili9342c_mpy - ILI9342C Fast 'C' Driver for MicroPython (M5Stack Core).</li> <li>gc9a01py - GC9A01 Display driver in MicroPython.</li> <li>gc9a01_mpy - Fast MicroPython driver for GC9A01 display modules written in C.</li> <li>st7735-esp8266-micropython - An ESP8266 MicroPython library for ST7735 160x80, 128x128, 128x160 TFT LCD displays.</li> <li>TTGO-ST7789-MicroPython - MicroPython ST7789 display driver for TTGO T-Display ESP32 CP2104 WiFi Bluetooth Module 1.14 Inch LCD.</li> <li>st7735_micropython - ST7735 MicroPython drivers for 80x160, 128x128, 128x160 for ESP8266.</li> <li>ili934x-micropython - Library for using ILI9341 display drivers with MicroPython.</li> <li>micropython-st7735-esp8266 - MicroPython driver for ST7735 TFT displays on the ESP8266.</li> <li>st7789s3_esp_lcd - Fast ESP_LCD based MicroPython driver for the TTGO T-Display-S3 st7789 display written in C.</li> <li>s3lcd - ESP_LCD based MicroPython driver for ESP32-S3 Devices with ST7789 or compatible displays.</li> <li>thmi_py - MicroPython display driver for the LILYGO T-HMI written in Python.</li> <li>wt32sc01py - WT32SC01 Plus MicroPython Display Driver.</li> <li>st7789s3_mpy - MicroPython display driver for the TTGO T-Display-S3 ST7789 written in C.</li> <li>t-display-s3 - MicroPython display driver for the TTGO T-Display-S3 ST7789 written in Python.</li> <li>mp-ili9341 - MicroPython Driver for ILI9341 TFT Display.</li> <li>lvgl_esp32_gc9a01 - Driver for displays using the GC901 driver for use with LVGL MicroPython.</li> <li>ST77xx-pure-MP - Pure MicroPython driver for ST77xx displays. Low memory requirements.</li> <li>upy-st7789 - A simple ST7789 driver written in MicroPython.</li> </ul>"},{"location":"#led-matrix","title":"LED Matrix","text":"<ul> <li>micropython-ht1632c - Driver for HT1632C 32x16 bicolor LED matrix.</li> <li>micropython-matrix8x8 - Driver for Adafruit 8x8 LED Matrix display with HT16K33 backpack.</li> <li>micropython-max7219 - Driver for MAX7219 8x8 LED matrix modules.</li> <li>micropython-wemos-led-matrix-shield - Driver for Wemos D1 Mini Matrix LED shield, using TM1640 chip.</li> <li>micropython-max7219 - MicroPython driver for MAX7219 8x8 LED matrix.</li> <li>MatrixDisplay - MicroPython module for work with MAX7219 LED matrix 8x8 display.</li> <li>LED_panel_upy - MicroPython driver module for Panel P10 32x16 Matrix display and its variants.</li> </ul>"},{"location":"#led-segment","title":"LED Segment","text":"<ul> <li>LKM1638 - Driver for JY-LKM1638 displays based on TM1638 controller.</li> <li>max7219_8digit - Driver for MAX7219 8-digit 7-segment LED modules.</li> <li>micropython-max7219 - Driver for MAX7219 8-digit 7-segment LED modules.</li> <li>micropython-my9221 - Driver for MY9221 10-segment LED bar graph modules.</li> <li>micropython-tm1637 - Driver for TM1637 quad 7-segment LED modules.</li> <li>micropython-tm1638 - Driver for TM1638 dual quad 7-segment LED modules with switches.</li> <li>micropython-tm1640 - Driver for TM1740 8x8 LED matrix modules.</li> <li>micropython-tm1640 - MicroPython Library for 16 digits 7-segment displays controlled by a TM1640.</li> <li>TM74HC595 - Driver for shift register-controlled 5 pin display modules.</li> <li>micropython-tm1638spi - MicroPython Library for a popular board with 8 7-segment digits, 8 separate LEDs and 8 push buttons controlled by a TM1638.</li> <li>micropython-hpdl1414 - MicroPython HPDL-1414 Display Driver.</li> </ul>"},{"location":"#leds","title":"LEDs","text":"<ul> <li>micropython-morsecode - Blink an LED with Morse Coded message.</li> <li>micropython-p9813 - Driver for P9813 RGB LED used in SeeedStudio's Grove chainable RGB LED.</li> <li>micropython-ws2812-7seg - 7-segment display using WS2812 RGB LEDs.</li> <li>micropython-ws2812 - Driver for WS2812 RGB LEDs.</li> <li>Official APA102 - ESP8266 APA102/DotStar RGB LED driver.</li> <li>Official WS2811 - ESP8266 WS2811/NeoPixel RGB LED driver.</li> <li>tlc5940-micropython - Driver for TLC5940 16 channel LED driver.</li> <li>ws2812-SPI - An efficient MicroPython WS2812 (NeoPixel) driver.</li> <li>micropython-ws2801 - A MicroPython library to interface with strands of WS2801 RGB LEDs.</li> <li>tlc5947-rgb-micropython - Driver for the TLC5947 24 channel 12-bit PWM LED driver.</li> <li>micropython-ht16k33 - MicroPython driver for the HT16K33, a LED matrix, 7-Segment Numeric, and 14-Segment Alphanumeric display driver IC.</li> <li>micropython-rgbled - This wrapper module aims to reduce the work needed to work with NeoPixel (WS2812) and DotStar (APA102) RGB LED strips and matrices.</li> <li>micropython_fastled - Port of FastLED to MicroPython.</li> <li>micropython-rgb-led-driver - Tiny driver to control an RGB LED with PWM.</li> <li>micropython-dotstar - A MicroPython port of the Adafruit CircuitPython APA102/DotStar library.</li> <li>micropython-aw210xx - Driver for Awinic's AW210xx line of 8-bit LED drivers.</li> </ul>"},{"location":"#oled","title":"OLED","text":"<ul> <li>Grove_OLED - Driver for SSD1327 used by SeeedStudio's Grove OLED Display 1.12\" v1.0.</li> <li>micropython-oled - Collection of drivers for monochrome OLED displays, PCD8544, SH1106, SSD1306, UC1701X.</li> <li>micropython-ssd1327 - Driver for SSD1327 128x128 4-bit greyscale OLED displays.</li> <li>micropython-ssd1351 - Driver for SSD1351 OLED displays.</li> <li>MicroPython_SSD1306 - ESP8266 driver for SSD1306 OLED 128x64 displays.</li> <li>Official SSD1306 - Driver for SSD1306 128x64 OLED displays.</li> <li>SH1106 - Driver for the SH1106 OLED display.</li> <li>micropython-ssd1309 - MicroPython SSD1309 Monochrome OLED Display Driver.</li> <li>sh1107-micropython - MicroPython driver for SH1107-based OLED display (64x128).</li> <li>SH1107 - Driver for SH1107 OLED displays (128x128 and 128x64 pixels).</li> <li>micropython-ssd1322 - MicroPython display driver for SSD1322 grayscale OLED.</li> <li>micropython-ssd1306 - MicroPython SPI &amp; I2C Display Driver for SSD1306 monochrome OLED.</li> </ul>"},{"location":"#printer","title":"Printer","text":"<ul> <li>micropython-thermal-printer - The MicroPython port of Python Thermal Printer by Adafruit.</li> </ul>"},{"location":"#io","title":"IO","text":""},{"location":"#adc","title":"ADC","text":"<ul> <li>ads1x15 - Driver for the ADS1015/ADS1115 ADC, I2C interface.</li> <li>micropython-ads1015 - ADS1015 12-Bit and ADS1115 16-bit ADC, 4 channels with programmable gain, I2C interface.</li> <li>Micropython_ADS1115 - ADS1115 16-bit ADC, 4 channels with programmable gain, I2C interface.</li> <li>ADS7818 - Python class interfacing the ADS7818 AD-converter.</li> <li>micropython-ads1219 - MicroPython module for the Texas Instruments ADS1219 ADC.</li> <li>MicroPython-ADC_Cal - ESP32 ADC driver using reference voltage calibration value from efuse.</li> <li>micropython-pcf8591 - MicroPython driver for PCF8591 ADC/DAC, I2C interface.</li> <li>MCP342x_LoPy - MicroPython driver for the MCP342x ADC.</li> <li>micropython-ads1220 - MicroPython library for ADS1220 24-bit analog-to-digital converter.</li> <li>PCF8591_micropython_library - MicroPython library for PCF8591 8-bit ADC/DAC.</li> <li>CS1237 - MicroPython driver for the CS1237 ADC.</li> <li>ads1115 - MicroPython module for managing ADS1115, multichannel, differential I2C ADC from TI.</li> <li>mcp3421 - MicroPython module for controlling MCP342X, 18-bit analog-to-digital converter with I2C interface.</li> <li>micropython-MCP3001 - MicroPython driver for the MCP3001 1-channel 10-bit ADC with SPI interface.</li> </ul>"},{"location":"#dac","title":"DAC","text":"<ul> <li>micropython-mcp4725 - Driver for the MCP4725 I2C DAC.</li> <li>mcp4728 - Helper library for the Microchip MCP4728 I2C 12-bit Quad DAC.</li> <li>mpyDAC - MicroPython module for controlling MCP4725, 12-bit digital analog converter (CAP) with EEPROM memory.</li> </ul>"},{"location":"#gpio","title":"GPIO","text":"<ul> <li>micropython-inputs - Classes to count pulses, debounce digital inputs, and calculate moving averages of analog inputs for a MicroPython board.</li> <li>ubutton - A MicroPython library for controlling reading and debouncing pushbutton inputs, including \"short\" and \"long\" press callbacks.</li> <li>micropython-debounce-switch - MicroPython Class for Debouncing Switches.</li> </ul>"},{"location":"#io-expander","title":"IO-Expander","text":"<ul> <li>micropython-mcp230xx - Driver for MCP23017 and MCP23008 GPIO expanders.</li> <li>micropython-mcp230xx - Driver for MCP23017 and MCP23008 GPIO expanders, extended with interrupt handling.</li> <li>micropython-mcp23017 - MicroPython driver for MCP23017 16-bit I/O Expander.</li> <li>micropython-pcf8574 - MicroPython driver for PCF8574 8-Bit I2C I/O Expander with Interrupt.</li> <li>micropython-pcf8575 - MicroPython driver for PCF8575 16-Bit I2C I/O Expander with Interrupt.</li> <li>ESP8266_MCP23S17 - MicroPython library for using the MCP23S17 16-bit I/O expander with the ESP8266.</li> <li>pcf8574 - MicroPython module for working with the PCF8574(A) I2C 8-bit I/O expander from NXP.</li> <li>mcp23017 - MicroPython module for MCP23017, 16-Bit I/O Expander with Serial Interface.</li> <li>micropython-sx1509 - MicroPython SX1509 I/O Expander Library.</li> </ul>"},{"location":"#joystick","title":"Joystick","text":"<ul> <li>micropython-nunchuck - Driver for Nunchuk game controller, I2C interface.</li> <li>esp32-microgamepad-ble - Dual analog joystick on ESP32 over BLE (Nordic UART Service - NUS) using MicroPython.</li> <li>micropython-joystick-2-unit - Driver for the M5Stack Joystick 2 Unit.</li> <li>Micropython_Joystick - A simple and fast library for joysticks over ADC.</li> </ul>"},{"location":"#keyboard","title":"Keyboard","text":"<ul> <li>micropython-keyboard - 47 key keyboard running on a MicroPython Pyboard.</li> <li>pico-rgbkeypad - A Python class for controlling the Pimoroni RGB Keypad for Raspberry Pi Pico.</li> <li>micropython-aiobutton - A MicroPython module for asyncio button.</li> <li>MicroPython-SimpleKeypad - MicroPython library for interfacing with a keypad matrix.</li> </ul>"},{"location":"#multiplexer","title":"Multiplexer","text":"<ul> <li>micropython-tca9548a - MicroPython examples using TCA9548A I2C multiplexer.</li> <li>tca9548a - MicroPython driver for the TCA9548A I2C multiplexer.</li> </ul>"},{"location":"#potentiometers","title":"Potentiometers","text":"<ul> <li>micropython-ad840x - MicroPython SPI-based manipulation of the AD series digital potentiometers AD8400, AD8402 and AD8403.</li> <li>mcp4131 - MicroPython module to control MicroChip's MCP4131 SPI digital potentiometer.</li> <li>MicroPython_DS1841 - MicroPython Driver for the DS1841 Potentiometer.</li> <li>MicroPython_DS3502 - MicroPython Driver for the DS3502 Potentiometer.</li> </ul>"},{"location":"#power-management","title":"Power Management","text":"<ul> <li>AXP202_PythonLibrary - MicroPython AXP202 Library.</li> <li>micropython_hourly_sleeper_library - A MicroPython library that enables an ESP8266 to sleep for hourly increments for a setup amount of hours.</li> </ul>"},{"location":"#pwm","title":"PWM","text":"<ul> <li>upwmcontroller - A MicroPython library for controlling PWM outputs in an asyncio loop, with features including fading and blinking.</li> </ul>"},{"location":"#relay","title":"Relay","text":"<ul> <li>micropython-xl9535-kxv5-relay - A MicroPython library for jxl XL9535-KxV5 I2C relay boards.</li> </ul>"},{"location":"#rotary-encoder","title":"Rotary Encoder","text":"<ul> <li>micropython-rotary - MicroPython module to read a rotary encoder.</li> <li>uencoder - A MicroPython library for reading from a rotary encoder.</li> <li>encodermenu - Simple GUI menu for MicroPython using a rotary encoder and basic display.</li> <li>encoderLib - MicroPython library to handle a rotary encoder.</li> <li>rotary-encoder - MicroPython code to drive a KY-040 rotary encoder.</li> <li>micropython-encoder-knob - A very simple lightweight encoder knob library with button support.</li> <li>encoders - Short document explaining issues around encoder technology.</li> <li>asynchronous encoder driver - Interface an encoder to uasyncio code.</li> <li>micropython-8encoder - Driver for the I2C M5Stack 8-Encoder Unit.</li> <li>micropython-quiic-twist - MicroPython Driver for Quiic Twist RGB Rotary Encoder.</li> <li>AS5600 - AS5600 MicroPython library for reading this magnetic sensor.</li> <li>AS5600 - MicroPython module for controlling single-turn magnetic encoder AS5600.</li> </ul>"},{"location":"#shift-registers","title":"Shift Registers","text":"<ul> <li>micropython-74hc595 - MicroPython driver for 74HC595 8-bit shift registers.</li> <li>MicroPython-SN74HCS264 - MicroPython Driver for SN74HCS264 8-Bit Parallel-Out Serial Shift Registers With Schmitt-Trigger Inputs and Inverted Outputs.</li> </ul>"},{"location":"#waveform-generator","title":"Waveform Generator","text":"<ul> <li>Micropython-AD9833 - Pyboard driver for AD9833, SPI interface.</li> <li>Clock_Generators - Clock generators (Si5351 for now) toolbox.</li> <li>Signal_Generators - Signal generators (AD9833, AD9834, AD9850, ADF4351) toolbox.</li> <li>pico-wave-vibration-generator - A MicroPython-based frequency generator for Raspberry Pi Pico designed to create vibrations on solenoids or speakers, enabling wave experimentation and exploration at home.</li> <li>micropython-m5stack-dds - MicroPython driver for the M5Stack DDS frequency generator.</li> <li>AD9833-MicroPython-Module - MicroPython module to use the AD9833 programmable waveform generator.</li> </ul>"},{"location":"#mathematics","title":"Mathematics","text":"<ul> <li>uMath - Computer Algebra for microcontrollers.</li> <li>micropython-ulab - A NumPy-like fast vector module for MicroPython.</li> <li>micropython-fourier - Fast Fourier transform in MicroPython's inline ARM assembler.</li> <li>Filters - FIR filters using ARM Thumb assembler. Using an online utility you can go from a graph of required frequency response to a filter implementation.</li> <li>ulinalg - Small size matrix handling module with a few linear algebra operations specifically for MicroPython (Python 3).</li> <li>micropython-mtx - Fast Matrix Multiplication and Linear Solver on MicroPython.</li> <li>micropython-vec - Vector Operations on MicroPython.</li> <li>MicroPython_Statistics - Statistics module for MicroPython.</li> <li>MicroPython-Matrix - MicroPython basic matrix operations.</li> <li>uumpy - A subset of NumPy for MicroPython.</li> <li>upyuncertainties - Uncertainty calculations for MicroPython.</li> <li>umatrix - A matrix library for the MicroPython language.</li> <li>micropython-fractions - A MicroPython port of the CPython standard Fractions library.</li> <li>Sun and Moon - Determine Sun and Moon rise and set times, Moon phases.</li> <li>micropython-npyfile - Numpy .npy file support for MicroPython, supports read/write/streaming.</li> <li>Micropython Perlin - A Perlin noise generator module.</li> </ul>"},{"location":"#motion","title":"Motion","text":"<ul> <li>MicroPython Motor Kit - General motor control libraries.</li> </ul>"},{"location":"#dc-motor","title":"DC Motor","text":"<ul> <li>L298N - Driver for the L298N dual H-bridge motor controller.</li> <li>MicroPython-L298 - Drive L298 dual H-bridge with MicroPython.</li> <li>pyl298 - Driver for the L298 dual full-bridge motor controller.</li> </ul>"},{"location":"#servo","title":"Servo","text":"<ul> <li>micropython-pca9685 - 16-channel 12-bit PWM/servo driver.</li> <li>micropython-servo - Library to control RC servos using direct PWM output in a tidy way.</li> <li>MicroPython_PCA9685 - MicroPython Driver for the PCA9685 PWM control IC, commonly used to control servos, LEDs and motors.</li> <li>MicroPython_MOTOR - MicroPython Helper for controlling PWM based motors.</li> <li>pca9685 - MicroPython module for managing a 16-channel SHIM controller, PCA9685</li> </ul>"},{"location":"#stepper","title":"Stepper","text":"<ul> <li>micropython-stepper - Library to control common stepper drivers in a tidy way.</li> <li>micropython-upybbot - A4988 driver for bipolar stepper motors.</li> <li>uln2003 - Driver for 5V 28BYJ-48 stepper motors.</li> <li>micropython-multiaxis - Multiaxis with MicroPython ESP32 and DRV8825.</li> <li>ticlib - Driver for Pololu Tic stepper motor controllers.</li> <li>AccelStepper-MicroPython - AccelStepper Library for MicroPython - ESP32.</li> <li>pystepper - MicroPython Stepper Motor Sequence Control.</li> <li>uPySteppers - DIY rotating platform using an ESP32 connected to WiFi.</li> <li>microPython_AMIS-30543 - MicroPython library for Stepper Driver control using AMIS-30543 driver.</li> <li>micropython-drv8825 - Driver and example in MicroPython to control a stepper motor via a DRV8825 controller board.</li> <li>microPython_TMC5160 - A MicroPython library for the Trinamic TMC5160 Motion Controller.</li> <li>micropython-stepper-motor - Drive a 28BYJ-48 motor attached to a ULN2003 driver.</li> </ul>"},{"location":"#sensors","title":"Sensors","text":""},{"location":"#accelerometer-digital","title":"Accelerometer Digital","text":"<ul> <li>ADXL345-with-Pyboard - Driver for ADXL345 16g 3-axis accelerometer.</li> <li>adxl345_micropython - Driver for ADXL345 16g 3-axis accelerometer.</li> <li>MicroPython-LIS3DH - I2C driver for LIS3DH 3-axis accelerometer.</li> <li>micropython-lis2hh12 - I2C driver for LIS2HH12 3-axis accelerometer.</li> <li>MMA7660 - Driver for MMA7660 1.5g 3-axis accelerometer.</li> <li>ADXL345_spi_micropython - Library for interacting through the SPI protocol with an 'Analog Devices ADXL345' accelerometer from an MCU flashed with MicroPython.</li> <li>MicroPython_ADXL343 - MicroPython Driver for the Analog Devices ADXL343 Accelerometer.</li> <li>MicroPython_BMA220 - MicroPython Driver for the Bosch BMA220 Accelerometer.</li> <li>MicroPython_BMA400 - MicroPython Driver for the Bosch BMA400 Accelerometer.</li> <li>bma423-pure-mp - MicroPython Driver for the Bosch 423 accelerometer. Includes FIFO support. \u23e9</li> <li>MicroPython_LIS3DH - MicroPython Driver for the LIS3DH 3-axis accelerometer.</li> <li>MicroPython_KX132 - MicroPython Driver for the Kionix KX132 Accelerometer.</li> <li>MicroPython_H3LIS200DL - MicroPython Driver for the ST H3LIS200DL Accelerometer.</li> <li>MicroPython_QMC5883L - MicroPython Driver for the QMC5883L Accelerometer.</li> <li>Micropython_MC3479 - MicroPython Driver for the MC3479 Accelerometer.</li> <li>MicroPython_MMA8451 - MicroPython module for the MMA8451 3-axis accelerometer.</li> <li>MicroPython_MMA8452Q - MicroPython Driver for the NXP MMA8452Q Accelerometer.</li> <li>msa301-micropython-driver - Homebrew MicroPython driver for MSA301 3-axis accelerometer. Tested on Raspberry Pico.</li> </ul>"},{"location":"#air-quality","title":"Air Quality","text":"<ul> <li>CCS811 - CCS811 Air Quality Sensor.</li> <li>upython-aq-monitor - Air Quality monitor using PMS5003 sensor and WiPy.</li> <li>micropython-pms7003 - MicroPython driver for the PMS7003 Air Quality Sensor.</li> <li>pms5003_micropython - Driver for PMS5003 air quality sensor for MicroPython.</li> <li>micropython-pms5003-minimal - Driver for P air quality sensor for MicroPython.</li> <li>polly - SDS011 pollution sensor + Wemos D1 mini pro + MicroPython.</li> <li>micropython-SNGCJA5 - MicroPython driver for Panasonic SN-GCJA5 particulate matter (PM) sensor.</li> </ul>"},{"location":"#barometer-air-and-water-pressure","title":"Barometer - Air and Water Pressure","text":"<ul> <li>MicroPython-BMPxxx - Driver for BMP585, BMP581, BMP390, BMP280 Bosch temperature/pressure sensors.</li> <li>mp-bmp3xx-full - MicroPython driver for the Bosch BMP3xx range of barometric pressure sensors. Includes FIFO support. \u23e9</li> <li>micropython-bme280 - Driver for the Bosch BME280 temperature/pressure/humidity sensor.</li> <li>micropython-bmp180 - Driver for Bosch BMP180 temperature, pressure and altitude sensor.</li> <li>mpy_bme280_esp8266 - Bosch BME280 temperature/pressure/humidity sensor.</li> <li>BME280 - MicroPython driver for the BME280 sensor, target platform Pycom devices.</li> <li>ms5803-micropython - A MicroPython implementation of the driver for an MS5803 air/water pressure &amp; temperature sensor.</li> <li>MPL3115A2_MicroPython - MicroPython library for the MPL3115A2 altimeter.</li> <li>D6F-PH - MicroPython module for differential pressure sensor, D6F-PH (OMRON).</li> <li>micropython-bmp280 - Module for the BMP280 sensor.</li> <li>micropython_bme280_i2c - A MicroPython module for communicating with the Bosch BME280 temperature, humidity, and pressure sensor.</li> <li>MicroPython-BME280 - Driver to digital sensor of Temperature, Pressure and Humidity.</li> <li>micropython-bmp180 - A module for MicroPython which provides a class for the BMP180 pressure sensor.</li> <li>bmp581 - MicroPython module for BMP581, pressure and ambient temperature sensor from Bosch Sensortec.</li> <li>BMP390 - MicroPython module for BMP390 pressure &amp; temperature sensor.</li> <li>BMP180 - MicroPython module for BMP180 pressure &amp; temperature sensor.</li> <li>MicroPython_DPS310 - MicroPython Driver for the DPS310 Sensor. (Archived)</li> <li>MicroPython_ICP10111 - MicroPython Driver for the TDK ICP-10111 Barometric Pressure and Temperature sensor. (Archived)</li> <li>MicroPython_BMP581 - MicroPython driver for the Bosch BMP581 pressure &amp; temperature sensor. (Archived)</li> <li>MicroPython_MMR902 - MicroPython Driver for the Mitsumi MMR902 Micro Pressure Sensor. (Archived)</li> <li>MicroPython_MPL3115A2 - MicroPython driver for the NXP MPL3115A2 Pressure and Temperature sensor. (Archived)</li> <li>MicroPython_MS5611 - MicroPython Driver for the TE MS5611 Pressure and Temperature Sensor. (Archived)</li> </ul>"},{"location":"#battery","title":"Battery","text":"<ul> <li>Micropython-LC709203F - A simple MicroPython library for LC709293F Fuel Gauge.</li> </ul>"},{"location":"#biometric","title":"Biometric","text":"<ul> <li>micropython-fingerprint - MicroPython library for reading Grow and ZhianTec fingerprint sensors.</li> <li>MAX30102-MicroPython-driver - A MAX30102 driver ported to MicroPython. It should also work for MAX30105.</li> <li>max30102 - MicroPython driver for the MAX30102, with heartbeat detection and BPM measurement.</li> </ul>"},{"location":"#camera","title":"Camera","text":"<ul> <li>micropython-camera-API - Project with the aim of supporting cameras across various ports in MicroPython, starting with the ESP32 port and Omnivision cameras (OV2640 &amp; OV5640).</li> <li>micropython-ov2640 - MicroPython class for OV2640 camera.</li> <li>Nikon-Trigger-for-MicroPython - Remote trigger for a Nikon camera using an IR LED. For Pyboard v1.1.</li> <li>micropython-camera-driver - OV2640 camera driver for MicroPython on ESP32.</li> <li>esp32-cam-micropython - MicroPython ESP32-CAM.</li> <li>uPyCam - Take a photo with an ESP32-CAM running MicroPython.</li> <li>OV2640_uPy - OV2640 camera library for MicroPython.</li> <li>MQTT-Cam - ESP32-CAM MicroPython MQTT AWS S3 Uploader.</li> <li>huskylib - MicroPython driver for the DFRobot Husky Lens. An easy-to-use AI Camera / Vision Sensor, featuring face recognition, object tracking, object recognition, line tracking, color recognition, and QR code recognition.</li> </ul>"},{"location":"#colour","title":"Colour","text":"<ul> <li>micropython-tcs34725 - Driver class for TCS34725 and TCS34727 color sensors.</li> <li>micropython-as7341 - MicroPython library for AS7341.</li> <li>MicroPython_ISL29125 - MicroPython Driver for the Intersil ISL29125 Color Sensor.</li> <li>TCS3200-MicroPython - A MicroPython driver and test programs for the TCS3200 color sensor.</li> <li>MicroPython_TCS3430 - MicroPython driver for the AMS TCS3430 Color and ALS sensor.</li> <li>micropython-gy33 - UART and I2C drivers for GY-33 module (TCS3472 color sensor).</li> <li>veml6040 - MicroPython module for managing a color sensor RGBW, VEML6040 from Vishay.</li> </ul>"},{"location":"#compass","title":"Compass","text":"<ul> <li>micropython-esp8266-hmc5883l - 3-axis digital compass on the ESP8266.</li> <li>QMC5883 - Python class for the QMC5883 Three-Axis Digital Compass IC.</li> <li>microPython_AS5600L - MicroPython driver for AS5600L magnet rotary position sensor.</li> <li>QMC5883 - MicroPython module for control QMC5883L geomagnetic sensor.</li> </ul>"},{"location":"#current","title":"Current","text":"<ul> <li>micropythonINA219 - Driver for INA219 current sensor.</li> <li>pyb_ina219 - Driver for INA219 current sensor.</li> <li>INA219 - INA219 MicroPython driver.</li> <li>TI_INA226_micropython - MicroPython driver for Texas Instruments INA226 power measuring IC.</li> <li>micropython-current-monitor - Current monitor using the INA219 and an SSD1306 OLED.</li> <li>INA_TI - MicroPython module for controlling INA219, INA226 - A two-directional current / power monitor with the I2C interface.</li> </ul>"},{"location":"#distance-ir","title":"Distance IR","text":"<ul> <li>micropython-gp2y0e03 - IR-LED distance measuring sensor using Sharp GP2Y0E03.</li> <li>micropython-vl6180 - Time-of-Flight sensor, ambient light sensor &amp; IR emitter.</li> <li>GP2Y0A21YK - GP2Y0A21YK MicroPython library.</li> </ul>"},{"location":"#distance-laser","title":"Distance Laser","text":"<ul> <li>micropython-vl53l0x - Time-of-Flight laser-ranging sensor.</li> <li>Qwiic_TOF_Module_RFD77402 - Qwiic TOF Module (RFD77402) time-of-flight rangefinding module.</li> <li>VL53L0X - MicroPython Library for LiDAR Sensor VL53L0X.</li> <li>vl53l1x_pico - MicroPython driver for the VL53L1X ToF sensor.</li> <li>tf-luna-micropython - A simple MicroPython I2C library for TF-Luna LiDAR Module.</li> <li>vl53l5cx - MicroPython and CircuitPython Package for the VL53L5CX (4x4/8x8 ToF sensor array).</li> <li>VL6180X - MicroPython driver for the VL6180X sensor on the ESP32.</li> <li>LidarLight_v3HP_micropython - A MicroPython library for the Garmin Lidar Lite v3HP.</li> <li>vl53l1x - MicroPython driver for the VL53L1X ToF sensor.</li> <li>vl53l0x-nb - Fork of MicroPython driver for vl53l0x TOF sensor to add non-blocking mode.</li> </ul>"},{"location":"#distance-ultrasonic","title":"Distance Ultrasonic","text":"<ul> <li>micropython-hcsr04 - Driver for HC-SR04 ultrasonic distance sensors.</li> <li>micropython-us100 - MicroPython driver for the US-100 sonar distance sensor.</li> <li>micropython-i2c-ultrasonic - MicroPython driver for the RCWL-9620-based M5 I2C Ultrasonic Distance Unit.</li> <li>micropython-grove-ultrasonic-ranger - Driver for SeeedStudio's Grove Ultrasonic Ranger.</li> </ul>"},{"location":"#dust","title":"Dust","text":"<ul> <li>pyGP2Y - MicroPython library for the Sharp GP2Y1014AU0F Dust Sensor.</li> </ul>"},{"location":"#energy","title":"Energy","text":"<ul> <li>ATM90E26_Micropython - Driver for ATM90E26 energy metering device.</li> <li>MCP39F521 - ESP8266 scripts for reading MCP39F521 power monitors.</li> <li>micropython-p1meter - A ESP32 sensor to read a p1 electricity meter and publish this to MQTT and Home Assistant, written in MicroPython.</li> <li>esp32-solar2 - Simple solar regulator - MicroPython project.</li> <li>cs5490_micropython - MicroPython Driver for CS5490 Energy Monitor IC.</li> </ul>"},{"location":"#gaseous","title":"Gaseous","text":"<ul> <li>micropython-MQ - Drivers for MQ series gas sensors.</li> <li>MQ135 - Driver for MQ135 gas sensor.</li> <li>CCS811 - Basic MicroPython driver for CCS811 on ESP8266 boards.</li> <li>micropython-scd30 - MicroPython I2C driver for Sensirion SCD30 CO2 sensor module.</li> <li>MicroPython_SCD4X - MicroPython I2C driver for Sensirion SCD40 and SCD41 CO2 sensors.</li> <li>micropython-sgp40 - MicroPython I2C driver for SGP40 VOC sensor module.</li> <li>MICS6814-Micropython-driver - ESP32 MicroPython driver for the Pimoroni MICS6814 breakout board.</li> <li>MicroPython_AGS02MA - MicroPython Driver for the AGS02MA TVOC sensor.</li> <li>SCD4x - MicroPython module for work with SCD4x (SCD40, SCD41) low power CO2, temperature &amp; humidity electroacoustic sensor from Sensirion.</li> <li>ens160 - MicroPython module for work with ENS160 Digital Metal-Oxide Multi-Gas Sensor.</li> </ul>"},{"location":"#humidity","title":"Humidity","text":"<ul> <li>MicroPython_HTS221 - MicroPython Driver for the HTS221 Humidity Sensor.</li> </ul>"},{"location":"#human-presence","title":"Human Presence","text":"<ul> <li>ld2410 - 24GHz human presence sensing module, capable of detecting moving and stationary targets, and providing an approximate range.</li> </ul>"},{"location":"#light","title":"Light","text":"<ul> <li>MicroPython-SI1145 - SI1145 UV index, IR, visible light and proximity sensor.</li> <li>micropython-tsl2561 - Driver for the TSL2561 illumination sensor from TAOS / ams.</li> <li>mpy_bh1750fvi_esp8266 - ESP8266 driver for BH1750FVI sensor.</li> <li>bh1750 - BH1750 I2C digital light sensor driver.</li> <li>micropython-max44009 - MicroPython driver for the MAX44009 ambient light sensor.</li> <li>veml7700 - Library for MicroPython for VEML7700 light sensor.</li> <li>MicroPython_MAX44009_driver - MicroPython driver for MAX44009 light sensor.</li> <li>MicroPython-VEML6075 - Driver base for the VEML6075 UV light sensor.</li> <li>BH1750 - MicroPython module for the BH1750 ambient light sensor (ALS).</li> <li>veml7700 - MicroPython module for the VEML7700 ambient light sensor (ALS) from Vishay.</li> <li>opt3001 - MicroPython module for OPT3001, external lighting sensor from Texas Instruments.</li> <li>ltr390uv - MicroPython module for LTR390UV, ambient light sensor in the visible and ultraviolet ranges.</li> <li>bh1750.py - MicroPython BH1750 ambient light sensor driver.</li> </ul>"},{"location":"#load-cell","title":"Load Cell","text":"<ul> <li>micropython-hx711 - MicroPython driver for HX711 24-Bit Analog-to-Digital Converter.</li> <li>hx711_mpy-driver - MicroPython Driver for the HX711 weighing sensor.</li> <li>hx710 - MicroPython driver for the HX710.</li> <li>hx711 - MicroPython driver for the HX711 load cell interface.</li> <li>hx710 - MicroPython driver for the HX710 load cell interface.</li> </ul>"},{"location":"#magnetometer","title":"Magnetometer","text":"<ul> <li>MicroPython_LIS2MDL - MicroPython Driver for the ST LIS2MDL Magnetometer sensor.</li> <li>MicroPython_LIS3MDL - MicroPython Driver for the ST LIS3MDL magnetometer.</li> <li>MicroPython_MLX90393 - MicroPython Driver for the MLX90393 Magnetometer.</li> <li>MicroPython_MMC5603 - MicroPython driver for the Memsic MMC5603 Magnetometer.</li> <li>MicroPython_BMM150 - MicroPython Driver for the Bosch BMM150 Magnetometer.</li> <li>MicroPython_MMC5983 - MicroPython Library for the Memsic MMC5983 Magnetometer.</li> <li>MMC5603 - MicroPython module for MMC5603 geomagnetic sensor.</li> <li>HSCDTD008A - MicroPython module for HSCDTD008A geomagnetic sensor.</li> <li>RM3100 - MicroPython module for RM3100 geomagnetic sensor.</li> </ul>"},{"location":"#motion-inertial","title":"Motion Inertial","text":"<ul> <li>micropython-bmx055 - Driver for Bosch BMX055 IMU sensor.</li> <li>micropython-bno055 - Bosch Sensortec BNO055 9DOF IMU sensor, I2C interface.</li> <li>micropython-lsm9ds0 - LSM9DS0 g-force linear acceleration, Gauss magnetic and DPS angular rate sensors.</li> <li>micropython-mpu9250 - I2C driver for MPU9250 9-axis motion tracking device.</li> <li>micropython-mpu9x50 - Driver for the InvenSense MPU9250 inertial measurement unit.</li> <li>MPU6050-ESP8266-MicroPython - ESP8266 driver for MPU6050 accelerometer/gyroscope.</li> <li>py-mpu6050 - ESP8266 driver for MPU6050 accelerometer/gyroscope.</li> <li>micropython-mpu6886 - MicroPython I2C driver for MPU6886 6-axis motion tracking device.</li> <li>micropython-fusion - Sensor fusion calculates heading, pitch and roll from the outputs of motion tracking devices.</li> <li>flight_controller - MicroPython flight controller.</li> <li>micropython-bno055 - Bosch BNO055 driver for MicroPython. IMU with hardware sensor fusion.</li> <li>micropython-mpu6050-mqtt-streamer - Stream data from MPU6050 to MQTT server using MicroPython on ESP8266.</li> <li>upy-motion - A simple MPU6050 driver written in MicroPython.</li> <li>micropython-bno08x-rvc - MicroPython library for BNO08x.</li> <li>micropython-mpu9250 - MicroPython MPU-9250 (MPU-6500 + AK8963) I2C driver.</li> <li>MicroPython_ICM20948 - MicroPython Driver for the TDK ICM20948 Accelerometer/Gyro Sensor.</li> <li>MicroPython_BMI160 - MicroPython Driver for the Bosch BMI160 Accelerometer/Gyro Sensor.</li> <li>micropython-mpu6050 - MicroPython library for reading from MPU-6050 accelerometer and gyroscope modules.</li> <li>MicroPython_ICG20660 - MicroPython Driver for the TDK ICG20660 Accelerometer/Gyro sensor.</li> <li>MicroPython_BMI270 - MicroPython Driver for the Bosch BMI270 Accelerometer/Gyro Sensor.</li> <li>MicroPython_LSM6DSOX - MicroPython Library for the ST LSM6DSOX accelerometer/gyro Sensor.</li> </ul>"},{"location":"#proximity","title":"Proximity","text":"<ul> <li>uPy_APDS9960 - MicroPython proximity library for ESP8266 using APDS9960.</li> <li>MicroPython_VCNL4010 - MicroPython Driver for the Vishay VCNL4010 Proximity and Ambient Light Sensor.</li> <li>apds9960 - MicroPython Driver for the APDS9960, with simple gesture detection.</li> </ul>"},{"location":"#radiation","title":"Radiation","text":"<ul> <li>micropython-geiger - Geiger counter with MicroPython card.</li> <li>ESPGeiger - MicroPython library for the ESP8266 Geiger counter.</li> </ul>"},{"location":"#soil-moisture","title":"Soil Moisture","text":"<ul> <li>micropython-chirp - Driver for the Chirp Soil Moisture Sensor.</li> <li>MicroPython-MiFlora - Xiaomi Mi Flora (aka flower care) BLE plant sensors (soil moisture/conductivity/light intensity/temperature).</li> <li>micropython-miflora - MicroPython library for Xiaomi Mi Flora BLE plant sensors.</li> </ul>"},{"location":"#spectral","title":"Spectral","text":"<ul> <li>AS726X_LoPy - MicroPython driver for the AS726X spectral sensor.</li> <li>MicroPython_AS7262X_driver - MicroPython driver for AS7262/AS7263 nano spectrometer sensor.</li> </ul>"},{"location":"#temperature-analog","title":"Temperature Analog","text":"<ul> <li>micropython-max31855 - Thermocouple amplifier, SPI interface.</li> <li>max31856 - Precision thermocouple to digital converter with linearization, SPI interface.</li> <li>max31865 - Precision resistance-to-digital converter optimized for platinum resistance temperature detectors, SPI interface.</li> <li>mcp9700 - Generic MicroPython driver for MCP9700.</li> <li>micropython-generic-thermistor - MicroPython Generic Thermistor Library for simplified temperature sensing using NTC thermistors with voltage dividers.</li> <li>micropython-simple-thermistor - Read NTC thermistor temperature wired in a potential divider.</li> </ul>"},{"location":"#temperature-digital","title":"Temperature Digital","text":"<ul> <li>bme680-mqtt-micropython - Driver for BME680 gas, pressure, temperature and humidity sensor.</li> <li>LM75-MicroPython - Driver for LM75 digital temperature sensor, I2C interface.</li> <li>micropython-am2320 - Aosong AM2320 temperature and humidity sensor, I2C interface.</li> <li>micropython-dht12 - Aosong DHT12 temperature and humidity sensor, I2C interface.</li> <li>micropython-hdc1008 - Driver for the Texas Instruments HDC1008 humidity and temperature sensor.</li> <li>micropython-mcp9808 - Driver for the Microchip MCP9808 temperature sensor.</li> <li>micropython-mpl115a2 - Pyboard driver for the MPL115A2 barometric pressure sensor.</li> <li>micropython-sht30 - Driver for SHT30 temperature and humidity sensor.</li> <li>micropython-sht31 - Driver for the SHT31 temperature and humidity sensor.</li> <li>micropython-Si7005 - Driver for Si7005 relative humidity and temperature sensor.</li> <li>micropython-si7021 - SI7021 Temperature and humidity sensor, I2C interface.</li> <li>micropython-si7021 - SI7021 Temperature and humidity sensor, I2C interface.</li> <li>micropython-Si705x - Silicon Labs Si705x series of temperature sensors, I2C interface.</li> <li>micropython-Si70xx - Silicon Labs Si70xx series of relative humidity and temperature sensors, I2C interface.</li> <li>micropython-tmp102 - Driver for TMP102 digital temperature sensor.</li> <li>Official DHT11+DHT12 - ESP8266 driver for DHT11 and DHT12 temperature and humidity sensor.</li> <li>sht25-micropython - Driver for SHT25 temperature and humidity sensor.</li> <li>micropython-tmp1075 - Driver for the TI TMP1075 temperature sensor.</li> <li>micropython-sht11 - Driver for Sensirion SHT11 temperature and humidity sensor.</li> <li>micropython-lm75a - Driver for the NXP LM75A digital temperature sensor.</li> <li>BME680-Micropython - MicroPython driver for the BME680 sensor.</li> <li>htu21d-esp8266 - This is a MicroPython module / class to measure data from the HTU21D.</li> <li>HTU21D - Asynchronous driver for HTU21D temperature and humidity sensor.</li> <li>esp-sht3x-micropython - A SHT3x (SHT30/31/35) library for ESP8266/ESP32 with MicroPython.</li> <li>sht25-micropython - MicroPython implementation of API of SHT25 humidity and temperature sensor.</li> <li>micropython-sht30 - SHT30 sensor driver in pure Python based on I2C bus.</li> <li>micropython_ahtx0 - MicroPython driver for the AHT10 and AHT20 temperature and humidity sensors.</li> <li>sht85 - MicroPython driver for the Sensiron SHT85 humidity and temperature sensor.</li> <li>micropython-zacwire - MicroPython driver for the ZACwire protocol used in TSic 506F temperature sensors.</li> <li>MicroPython_HTU31D - MicroPython library for TE HTU31D temperature and humidity sensors.</li> <li>MicroPython_SHTC3 - MicroPython Driver for the Sensirion SHTC3 Temperature and Humidity Sensor.</li> <li>MicroPython_TMP117 - MicroPython Driver for the TMP117 Temperature Sensor.</li> <li>MicroPython_SI7021 - MicroPython Library for the Temperature and Humidity SI7021 Sensor.</li> <li>MicroPython_ADT7410 - MicroPython Driver for the Analog Devices ADT7410 Temperature Sensor.</li> <li>MicroPython_WSENTIDS - MicroPython library for the WSEN WSEN-TIDS temperature Sensor.</li> <li>MicroPython_HS3003 - MicroPython Driver for the Renesas HS3003 Temperature and Humidity Sensor.</li> <li>MicroPython_STTS22H - MicroPython Driver for the STTS22H Temperature Sensor.</li> <li>MicroPython_HTU21DF - MicroPython HTU21D-F Temperature &amp; Humidity driver.</li> <li>MicroPython_SHT4X - MicroPython Driver for the Sensirion Temperature and Humidity SHT40 and SHT45 Sensor.</li> <li>MicroPython_SHT20 - MicroPython Driver for the Sensirion SHT20 Temperature Sensor.</li> <li>MicroPython_MCP9808 - MicroPython Driver for the Microchip MCP9808 Temperature Sensor.</li> <li>MicroPython_HDC1080 - MicroPython driver for the TI HDC1080 Temperature and Humidity sensor.</li> <li>TMP117 - MicroPython module for the TMP117 temperature sensor from Texas Instruments.</li> <li>BME680 - MicroPython module for the BME680, Bosch low power gas, pressure, temperature &amp; humidity sensor.</li> <li>SHT30 - MicroPython driver for the Sensirion SHT3x sensor.</li> <li>MicroPython_AS6212 - MicroPython Library for the ASM AS6212 Temperature Sensor.</li> <li>MicroPython_PCT2075 - MicroPython Driver for the NXP Semiconductors PCT2075 Temperature Sensor.</li> <li>micropython-hdc1080 - MicroPython driver for the HDC1080 temperature and humidity sensor.</li> <li>bme680-pure-mp - Pure MicroPython Bosch BME680 sensor driver.</li> <li>SHT4X - MicroPython module for controlling the SHT4x - 4th generation relative humidity and temperature sensor.</li> </ul>"},{"location":"#temperature-ir","title":"Temperature IR","text":"<ul> <li>micropython-mlx90614 - Driver for Melexis MLX90614 IR temperature sensor.</li> <li>MicroPython_MLX90615_driver - MicroPython driver for Melexis MLX90615 IR temperature sensor.</li> </ul>"},{"location":"#touch-capacitive","title":"Touch Capacitive","text":"<ul> <li>micropython-mpr121 - Driver for MPR121 capacitive touch keypads and breakout boards.</li> <li>micropython-ttp223 - Examples using TTP223 capacitive touch module.</li> <li>micropython-TTP229-BSF - MicroPython ESP8266/ESP32 driver for TTP229-BSF 16-key capacitive keypad in serial interface mode.</li> <li>uFT6336U - MicroPython I2C driver for the Focus LCDs FT6336U capacitive touch panel controller IC.</li> <li>MicroPythonTrill - Trill touch sensor library for MicroPython.</li> <li>L58Touch - L58 Multi-Touch MicroPython Module.</li> <li>micropython-ft6x06 - Simple driver for FT6x06 capacitive touch sensor in pure Python.</li> </ul>"},{"location":"#touch-resistive","title":"Touch Resistive","text":"<ul> <li>XPT2046-touch-pad-driver - Driver for XPT2046 touch pad controller used in many TFT modules.</li> </ul>"},{"location":"#scheduling","title":"Scheduling","text":"<ul> <li>micropython-mcron - MicroCRON is a time-based task scheduling program for MicroPython.</li> <li>micropython-scron - SimpleCRON is a time-based task scheduling program inspired by the well-known cron program for Unix systems.</li> <li>Schedule - A scheduler for asyncio based applications. Schedule events at specified times and dates or with reference to Sun and Moon rise and set.</li> <li>micropython-aioschedule - A persistent uasyncio scheduler that supports deepsleep between task runs.</li> </ul>"},{"location":"#storage","title":"Storage","text":""},{"location":"#configuration-file","title":"Configuration file","text":"<ul> <li>uPyftsConf - MicroPython Far Too Simple Config File. Single file library that writes configurations to itself.</li> </ul>"},{"location":"#databases","title":"Databases","text":"<ul> <li>uPyMySQL - Pure MicroPython MySQL Client.</li> <li>micropython-redis - A Redis client implementation designed for use with MicroPython.</li> <li>picoredis - A very minimal Redis client (not only) for MicroPython.</li> <li>micropg - PostgreSQL database driver for MicroPython.</li> <li>micropg_lite - Lightweight version of micropg with some slight limitations (e.g. error handling), in order to run on low-RAM microcontrollers (works with ESP8266).</li> <li>micropg_superlite - The lightest PostgreSQL database driver for micropython based on micropg_lite/micropg, but has even stronger restrictions in functionality and focuses only on the absolutely necessary functions.</li> <li>micropython-cratedb - MicroPython driver for CrateDB databases.</li> <li>nmongo - MongoDB client for CPython and MicroPython, with MongoDB shell-like APIs.</li> <li>MicroPyDatabase - A low-memory JSON-based database for MicroPython.</li> <li>micropython-firebase-realtime-database - Firebase implementation for MicroPython optimized for ESP32.</li> <li>micropython-firebase-firestore - Firebase Firestore implementation for MicroPython.</li> <li>uSQLite - SQLite library module for MicroPython.</li> </ul>"},{"location":"#eeprom","title":"EEPROM","text":"<ul> <li>micropython_eeprom - Cross-platform MicroPython device drivers for memory chips (EEPROM, FRAM, Flash, PSRAM).</li> <li>mb_24x256_512 - Very simple MicroPython module/driver for Microchip 24x256 and 24x512 I2C EEPROM devices.</li> <li>micropython-eeprom - MicroPython driver for AT24Cxx EEPROM.</li> </ul>"},{"location":"#flash","title":"Flash","text":"<ul> <li>micropython_data_to_py - A Python 3 utility to convert an arbitrary binary file to Python source for freezing as bytecode in Flash.</li> <li>micropython-winbond - Interact with Winbond W25Q Flash chips via SPI.</li> <li>freezeFS - Create self-extracting compressed or self-mounting archives for MicroPython.</li> </ul>"},{"location":"#fram","title":"FRAM","text":"<ul> <li>micropython-fram - Pyboard driver for Ferroelectric RAM module.</li> </ul>"},{"location":"#psram","title":"PSRAM","text":"<ul> <li>mb_PSRAM_64Mb_SPI - Very simple MicroPython module to use a generic 64Mbit PSRAM (ie Adafruit 4677) with a Raspberry Pi Pico (RP2040).</li> </ul>"},{"location":"#sd","title":"SD","text":"<ul> <li>mp-sdcard-littleFS - MicroPython SD card driver that works with LittleFS2 (implements extended interface).</li> </ul>"},{"location":"#sram","title":"SRAM","text":"<ul> <li>mb_23LC1024 - Very simple MicroPython module to use a Microchip 23LC1024 SPI SRAM with a Raspberry Pi Pico (RP2040).</li> <li>mb_47x16 - Very simple MicroPython module/driver for Microchip 47x16 EERAM devices (47L/47C).</li> </ul>"},{"location":"#threading","title":"Threading","text":"<ul> <li>MicroWorkers - A micro workers class that easily manages a pool of threads to optimise simultaneous jobs and jobs endings, for MicroPython (used on Pycom modules &amp; ESP32).</li> </ul>"},{"location":"#user-interface","title":"User Interface","text":"<ul> <li>upymenu - MicroPython Menu for LCD Displays.</li> </ul>"},{"location":"#utilities","title":"Utilities","text":"<ul> <li>micropython-hexdump - An implementation of Hexdump for MicroPython.</li> </ul>"},{"location":"#community","title":"Community","text":"<ul> <li>MicroPython Discussions on GitHub - GitHub discussions for all things related to MicroPython.</li> <li>MicroPython Forum (archive) - Archived community conversations on all things related to MicroPython.</li> <li>Discord - Get an invite to the MicroPython Discord server.</li> <li>MicroPython on Mastodon / Fediverse - Follow MicroPython in the Fediverse.</li> <li>MicroPython on Twitter - Follow MicroPython on Twitter for latest news and updates.</li> <li>MicroPython on Facebook - Like MicroPython on Facebook for competitions, news and updates.</li> <li>Melbourne MicroPython Meetup - Regular meetup at CCHS in Melbourne, Australia.</li> </ul>"},{"location":"#tutorials","title":"Tutorials","text":"<ul> <li>asyncio - Write asynchronous code which interfaces to hardware devices.</li> <li>Asynchronous drivers - Tutorial and code for asynchronous interfaces to switches, pushbuttons, encoders and ADCs.</li> <li>Pyboard micropower - Tutorial and code for low power applications on Pyboard 1.x and Pyboard D.</li> <li>3D rotation with quaternions - Tutorial and code for the easy way to do 3D rotation.</li> <li>Miguel Grinberg - MicroPython and the Internet of Things.</li> <li>Bhavesh Kakwani - MicroPython videos + written tutorials.</li> <li>CoderDojo Twin Cities MicroPython - Full coding curriculum for teaching MicroPython to children.</li> <li>MicroPython Tutorials for ESP32 boards - Tutorials with code examples to learn the basic of MicroPython with ESP32 boards.</li> <li>Learn MicroPython with a Pi Pico board - Tutorials on MicroPython with the Raspberry Pi Pico / RP240 boards.</li> </ul>"},{"location":"#books","title":"Books","text":"<ul> <li>Programming with MicroPython: Embedded Programming with Microcontrollers and Python - By Nicholas H. Tollervey. ISBN 9781491972731.</li> <li>MicroPython for the Internet of Things: A Beginner's Guide to Programming with Python on Microcontrollers - By Charles Bell. ISBN 9781484231227.</li> <li>Beginning MicroPython with the Raspberry Pi Pico: Build Electronics and IoT Projects - By Charles Bell. ISBN 9781484281345.</li> <li>MicroPython Cookbook - By Marwan Alsabbagh. ISBN 9781838649951.</li> <li>Python for Microcontrollers: Getting Started with MicroPython - By Donald Norris. ISBN 9781259644535.</li> <li>Advanced Programming in MicroPython By Example - By Yury Magda. ISBN 9781090900937.</li> <li>MicroPython Projects - By Jacob Beningo. ISBN 9781789958034.</li> <li>Get Started with MicroPython on Raspberry Pi Pico 2nd Edition - By Gareth Halfacree and Ben Everard. ISBN 9781912047291.</li> <li>MicroPython for Microcontrollers - By G\u00fcnter Spanner. ISBN 9783895764370.</li> <li>MicroPython for the Raspberry Pi Pico W: A gentle introduction to programming digital circuits with Python - By Miguel Grinberg. ISBN 9798361302710.</li> <li>Programming ESP32: Learn MicroPython Coding and Electronics - By Simon Monk. ISBN 9781739487454.</li> </ul>"},{"location":"#frameworks","title":"Frameworks","text":"<ul> <li>micrOS - MicroPython-based IoT Framework.</li> <li>terkin-datalogger - Flexible data logger application for MicroPython and CPython.</li> <li>perthensis - Perthensis: an asynchronous framework for MicroPython.</li> <li>meerkat - I2C Data Acquisition for MicroPython and Raspberry Pi.</li> </ul>"},{"location":"#resources","title":"Resources","text":"<ul> <li>MicroPython - Project website. Test drive the Pyboard. Try MicroPython online with Unicorn.</li> <li>MicroPython on GitHub - Submit bug reports, follow and join in development on GitHub.</li> <li>MicroPython Official Documentation - For various ports, including quick reference, general information, examples and tutorials.</li> <li>MicroPython Wiki - Community generated documentation and examples of the features of MicroPython and the Pyboard.</li> <li>MicroPython Newsletter - Subscribe to the MicroPython newsletter for news and announcements including new features and new products.</li> <li>MicroPython Store - Where you can buy the Pyboard, housings, skins, books, connectors and peripherals.</li> <li>MicroPython on Wikipedia - MicroPython on Wikipedia.</li> <li>awesome-micropythons - The many forks &amp; ports of MicroPython.</li> </ul>"},{"location":"#development","title":"Development","text":""},{"location":"#code-generation","title":"Code Generation","text":"<ul> <li>micropy-cli - Micropy CLI is a project management/generation tool for writing MicroPython code in modern IDEs such as Visual Studio Code.</li> <li>micropython-stubber - Generate and use stubs for different MicroPython firmwares to use with Visual Studio Code or any IDE and linter.</li> <li>micropython-stubs - Stubs of most MicroPython ports, boards and versions to make writing code that much simpler.</li> <li>micropy-stubs - Automatically Generated Stub Packages for Micropy-Cli and whomever else.</li> <li>micropython-extmod-generator - Generator for MicroPython external modules written in C.</li> <li>micropython-package-template - GitHub workflow supported MicroPython package template with deploys to the Python Package Index on a push to the main branch and test deploys to the Test Python Package Index on PRs.</li> <li>micropython-usermod - Online book about MicroPython external modules writen in C.</li> <li>wasm2mpy - Compile WebAssembly to native MicroPython <code>.mpy</code> files. Allows writing code in various statically compiled languages, and translating them to C for near-native performance.</li> </ul>"},{"location":"#debugging","title":"Debugging","text":"<ul> <li>esp32-backtrace - ESP32 Exception Stack Backtrace Analyzer.</li> <li>micropython-aiosentry - Asynchronous Sentry.io micro client for MicroPython.</li> <li>micropython-usyslog - Simple remote syslog client for MicroPython.</li> <li>Asynchronous monitor - Use a Raspberry Pico and a logic analyser or scope to monitor asynchronous code.</li> </ul>"},{"location":"#firmware","title":"Firmware","text":"<ul> <li>micropython-builder - Tool for building and flashing a custom MicroPython firmware.</li> <li>mpflash -\u26a1Your Ultimate MicroPython Flashing Companion for stm32, rp2, esp32, esp8266, samd.</li> </ul>"},{"location":"#ides","title":"IDEs","text":"<ul> <li>BIPES - Web-based IDE for MicroPython with file manager, editor, code generation from blocks, IoT dashboard and Serial/USB/Bluetooth/WebREPL console on the web browser. Source: https://github.com/BIPES.</li> <li>Embedible - an AI hardware copilot that helps you design, wire, and code MicroPython projects for ESP32 and Raspberry Pi Pico W.</li> <li>ESP32-MPY-Jama - Tool for managing Espressif ESP32 microcontrollers with MicroPython.</li> <li>JetBrains IntelliJ/PyCharm MicroPython Plugin - Plugin for MicroPython devices in IntelliJ and PyCharm.</li> <li>MicroPython IDE for VSCode - MicroPython IDE for Visual Studio Code.</li> <li>MicroPython-REPLink for VSCode - Handy shortcuts for interacting with a MicroPython REPL terminal.</li> <li>MPRemote for VSCode - An extension to provide easy access to some of mpremote's functionality from within Visual Studio Code.</li> <li>Mu Editor -  Code with Mu: a simple Python/MicroPython/CircuitPython editor for beginner programmers.</li> <li>Thonny IDE - Thonny: Python IDE for beginners.</li> <li>ViperIDE - An innovative MicroPython / CircuitPython IDE for Web and Mobile. No installation required.</li> <li>Pyboard File Manager - Pyboard File Manager: Windows GUI for Pyboard.py compatible devices.</li> <li>uPIDE - \u00b5PIDE is a simple IDE for MicroPython.</li> <li>pye - On device editor.</li> </ul>"},{"location":"#logging","title":"Logging","text":"<ul> <li>micropython-ulogger - Lightweight log module customized for MicroPython.</li> <li>scd30logger - Sensirion SCD30 based CO2, Humidity and Temperature Logger for MicroPython.</li> <li>sht15logger - MicroPython Temperature and Humidity Logger using Sensirion SHT15.</li> </ul>"},{"location":"#shells","title":"Shells","text":""},{"location":"#jupyter","title":"Jupyter","text":"<ul> <li>micropython-magic - MicroPython integrated into Jupyter notebooks.</li> <li>jupyter_upydevice_kernel - Jupyter kernel to interact with a MicroPython board over its REPL interface.</li> </ul>"},{"location":"#on-device","title":"On Device","text":"<ul> <li>upy-shell - A simple command line-based shell for MicroPython.</li> <li>Micropython-Editor - Small on-board editor for Pyboard, WiPy, ESP8266, ESP32, PyCom and Adafruit devices written in Python.</li> </ul>"},{"location":"#on-host","title":"On Host","text":"<ul> <li>rshell - Copy or sync files to boards, enter REPL from your terminal.</li> <li>ampy - Utility to interact with a MicroPython board over a serial connection.</li> <li>mpbridge - A file system bridge to synchronize and manage files on a device running MicroPython.</li> <li>mpfshell - A simple shell-based file explorer for ESP8266 and WiPy.</li> <li>mpsync - A tool that automatically synchronizes code to a MicroPython board.</li> <li>mpremote - Powerful official shell that supports mounting the host's current directory on the target. Run code without changing the target's filesystem.</li> <li>MPRemoteEditor - A simple Windows IDE for developing with MicroPython MPRemote devices.</li> <li>uPyExplorer - Explorer for MicroPython Device.</li> <li>mpr - Wrapper for MicroPython mpremote tool.</li> </ul>"},{"location":"#miscellaneous","title":"Miscellaneous","text":"<ul> <li>MicroPython Kickstarter - 1,931 backers pledged \u00a397,803 to help bring this project to life.</li> <li>MicroPython on the ESP8266 Kickstarter - 1,399 backers pledged \u00a328,534 to help bring this project to life.</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>Contributions and suggestions are always welcome! Please take a look at the contribution guidelines first.</p> <p>I will keep some pull requests open if I'm not sure whether those libraries are awesome, you could vote for them by adding \ud83d\udc4d to them.</p>"}]}